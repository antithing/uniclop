#! /usr/bin/env python
# encoding: utf-8

import os, os.path, glob

srcdir=[".", "video_input"]

def set_options(opt):
    print '  setting the applications options'

def configure(conf):
    print '  executing the applications configuration'
    conf.sub_config("video_input")
    
def build(bld):
    print '  building the applications'
    
    # local files
    abstract_application_files = bld.glob("*.cpp")
    print(abstract_application_files)
   
    task = bld.new_task_gen(
        features = 'cxx cstaticlib',
        source = abstract_application_files,
        target = "AbstractApplication",
        #name="AbstractApplication",
        )

    # find subdirectories
    path = bld.path.abspath()   
    applications = [file for file in os.listdir(path) if os.path.isdir(path + "/" + file)]
    print("Found %i applications:" % len(applications))

    libs = ["BOOST_PROGRAM_OPTIONS",]

    # for each subdirectory 
    for application_name in applications:

        if application_name not in ["video_input",]:
            continue

        print("\t" + application_name)
        source_files = abstract_application_files + bld.glob( application_name + "/*.cpp")
        #print("\tSource files: " + str(source_files))
        #print("\tFiles: " + str(bld.path.files()))
        #print("\tDirs: " + str(bld.path.dirs()))

        if True:
            bld.add_subdirs(application_name)
        else:
            task = bld.new_task_gen(
                features = 'cxx cprogram',
                source = source_files,
                target = application_name,
                lib= libs)

            #print(task)
            print("task.source: "+ str(task.source))
      
